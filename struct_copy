* WHAT'S THE BEST WAY TO COPY STRUCT IN C/C++:
  -------------------------------------------
                                                    1st way: assign individual members from one object to another object(eg:p1.age=p2.age).
                                                    2nd way: Assigning using memcpy(starting Address,value you need to assign,how.many bytes).
                                                    3rd way:using assignment operator(eg.p1=p2).
Eg1:
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct person
{
    int age;
    char name[20];
    float height;
};
int main()
{
    struct person p1,p2;
    p1.age=23;
    p1.height=43.2;
    strncpy(p1.name,"siva",sizeof(p1.name));
    printf("Name:%s\n",p1.name);
    printf("Age :%d\n",p1.age);
    printf("Height :%.2f\n",p1.height);
}


o/p:
Name:siva
Age :23
Height :43.20



Eg2:
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct person
{
    int age;
    char name[20];
    float height;
};
int main()
{
    struct person p1,p2;
    p1.age=23;
    p1.height=43.2;
    strncpy(p1.name,"siva",sizeof(p1.name));

    //copying from p1 to p2
    memcpy(p2.name,p1.name,sizeof(p1.name));
    p2.age = p1.age;
    p2.height=p1.height;
    printf("P1 Details:\n");
    printf("Name:%s\n",p1.name);
    printf("Age :%d\n",p1.age);
    printf("Height :%.2f\n",p1.height);
    printf("P2 Details:\n");
    printf("Name:%s\n",p1.name);
    printf("Age :%d\n",p1.age);
    printf("Height :%.2f\n",p1.height);

}
o/p:
P1 Details:
Name:siva
Age :23
Height :43.20
P2 Details:
Name:siva
Age :23
Height :43.20




Eg3:
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct person
{
    int age;
    char name[20];
    float height;
};
int main()
{
    struct person p1,p2;
    p1.age=23;
    p1.height=43.2;
    strncpy(p1.name,"siva",sizeof(p1.name));

    //copying from p1 to p2 directly
    memcpy(&p2,&p2,sizeof(p1));

    printf("P1 Details:\n");
    printf("Name:%s\n",p1.name);
    printf("Age :%d\n",p1.age);
    printf("Height :%.2f\n",p1.height);
    printf("P2 Details:\n");
    printf("Name:%s\n",p1.name);
    printf("Age :%d\n",p1.age);
    printf("Height :%.2f\n",p1.height);

}

o/p:
P1 Details:
Name:siva
Age :23
Height :43.20
P2 Details:
Name:siva
Age :23
Height :43.20


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


#include <iostream>
#include<stdio.h>
#include<string.h>

using namespace std;

struct person
{
    int age;
    char name[30];
    float height;
};
void prnt(struct person* s)
{
    printf("Name: %s, age: %d, height:%.2f\n",s->name,s->age,s->height);
}
int main()
{
   struct person p1,p2;
   p1.age=23;
   p1.height=42.3;
   strncpy(p1.name,"siva",sizeof(p1.name));
   prnt(&p1);
   memcpy(&p2,&p1,sizeof(p1));
   prnt(&p2);

    return 0;
}

o/p:
Name : siva, age: 23, height:42.30
Name : siva, age: 23, height:42.30



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Eg:
#include <iostream>
#include<stdio.h>
#include<string.h>

using namespace std;

struct person
{
    int age;
    char name[30];
    float height;
};
void prnt(struct person* s)
{
    printf("Name: %s, age: %d, height:%.2f\n",s->name,s->age,s->height);
}
int main()
{
   struct person p1,p2;
   p1.age=23;
   p1.height=42.3;
   strncpy(p1.name,"siva",sizeof(p1.name));
   p1=p2; //using assignment
   prnt(&p1);
   prnt(&p2);

    return 0;
}

o/p:
Name : siva, age: 23, height:42.30
Name : siva, age: 23, height:42.30
